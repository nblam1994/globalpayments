"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../../../../src");
const ServiceConfigs_1 = require("../../../../src/ServiceConfigs");
const config = new ServiceConfigs_1.GpEcomConfig();
config.merchantId = "heartlandgpsandbox";
config.accountId = "api";
config.sharedSecret = "secret";
config.serviceUrl = "https://api.sandbox.realexpayments.com/epage-remote.cgi";
config.rebatePassword = "rebate";
config.refundPassword = "refund";
const card = new src_1.CreditCardData();
card.number = "4111111111111111";
card.expMonth = "12";
card.expYear = "2025";
card.cvn = "123";
card.cardHolderName = "Joe Smith";
beforeAll(() => {
    src_1.ServicesContainer.configureService(config);
});
test("credit reverse", async () => {
    try {
        await card.reverse(15).withAllowDuplicates(true).execute();
    }
    catch (error) {
        expect(error).toBeInstanceOf(src_1.UnsupportedTransactionError);
        expect(error?.name).toBe("UnsupportedTransactionError");
        expect(-1 !==
            error?.message.indexOf("selected gateway does not support this transaction type")).toBe(true);
    }
});
//# sourceMappingURL=Credit.test.js.map