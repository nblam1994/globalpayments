import { AccountPermissions } from "../../../../../../src/Entities/ProFac/AccountPermissions";
import { BankAccountData } from "../../../../../../src/Entities/ProFac/BankAccountData";
import { BeneficialOwnerData } from "../../../../../../src/Entities/ProFac/BeneficialOwnerData";
import { BusinessData } from "../../../../../../src/Entities/ProFac/BusinessData";
import { DeviceData } from "../../../../../../src/Entities/ProFac/DeviceData";
import { GrossBillingInformation } from "../../../../../../src/Entities/ProFac/GrossBillingInformation";
import { RenewAccountData } from "../../../../../../src/Entities/ProFac/RenewAccountData";
import { SignificantOwnerData } from "../../../../../../src/Entities/ProFac/SignificantOwnerData";
import { ThreatRiskData } from "../../../../../../src/Entities/ProFac/ThreatRiskData";
import { UserPersonalData } from "../../../../../../src/Entities/ProFac/UserPersonalData";
import { CreditCardData } from "../../../../../../src/PaymentMethods";
import { Address } from "../../../../../../src/Entities/Address";
import { OrderDevice } from "../../../../../../src/Entities/ProFac/OrderDevice";
export declare class TestAccountData {
    static GetBankAccountForBoardingData(): BankAccountData;
    static GetBankAccountData(): BankAccountData;
    static GetBusinessForBoardingData(): BusinessData;
    static GetOrderNewDeviceData(): OrderDevice;
    static GetBusinessData(): BusinessData;
    static GetUserPersonalForBoadingData(dob?: string): UserPersonalData;
    static GetUserPersonalData(): UserPersonalData;
    static GetUserPersonalDeviceOrderTestData(): UserPersonalData;
    static GetThreatRiskData(): ThreatRiskData;
    static GetSignificantOwnerData(): SignificantOwnerData;
    static GetBeneficialOwnerData(): BeneficialOwnerData;
    static GetCreditCardData(): CreditCardData;
    static GetACHData(): BankAccountData;
    static GetMailingAddressForBoarding(): Address;
    static GetMailingAddress(): Address;
    static GetSecondaryBankAccountData(): BankAccountData;
    static GetGrossBillingSettleData(): GrossBillingInformation;
    static GetAccountPermissions(): AccountPermissions;
    static GetRenewAccountDetails(): RenewAccountData;
    static GetDeviceDataForPhysicalDevice(numDeviceTypes?: number, withAttributes?: boolean): DeviceData;
    static GetDeviceData(numDeviceTypes?: number, withAttributes?: boolean): DeviceData;
    static GetDocumentBase64String(filepath: string): string;
    private static getByteArray;
    static getRandomInt(min: number, max: number): number;
}
