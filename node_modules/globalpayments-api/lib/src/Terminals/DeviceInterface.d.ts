import { IDeviceInterface, IDeviceResponse, IRequestIdProvider } from ".";
import { DeviceController } from "./DeviceController";
import { TerminalAuthBuilder, TerminalManageBuilder } from "./Builders";
export declare abstract class DeviceInterface<T extends DeviceController> implements IDeviceInterface {
    controller: DeviceController;
    requestIdProvider: IRequestIdProvider;
    ecrId: string;
    constructor(controller: T);
    lineItem(leftText: string, rightText?: string, runningLeftText?: string, runningRightText?: string): Promise<IDeviceResponse>;
    /**********START Transactions ************/
    /**
     * @return TerminalAuthBuilder
     */
    authorize(amount?: number): TerminalAuthBuilder;
    capture(amount: number): TerminalManageBuilder;
    refund(amount?: number): TerminalAuthBuilder;
    refundById(amount: number): TerminalManageBuilder;
    sale(amount?: number): TerminalAuthBuilder;
    verify(): TerminalAuthBuilder;
    void(): TerminalManageBuilder;
}
