"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpaInterface = void 0;
const src_1 = require("../../../src");
const _1 = require(".");
const Builders_1 = require("../Builders");
const DeviceInterface_1 = require("../DeviceInterface");
const TerminalUtils_1 = require("../TerminalUtils");
class UpaInterface extends DeviceInterface_1.DeviceInterface {
    upaController;
    constructor(upaController) {
        super(upaController);
        this.upaController = upaController;
    }
    tipAdjust(amount) {
        return new Builders_1.TerminalManageBuilder(src_1.TransactionType.Edit, src_1.PaymentMethodType.Credit).WithGratuity(amount);
    }
    async lineItem(leftText, rightText) {
        if (!leftText) {
            throw new src_1.ApiError("Line item left text cannot be null");
        }
        const requestId = this.upaController.requestIdProvider.getRequestId();
        const data = {
            params: {
                lineItemLeft: leftText,
                lineItemRight: rightText || undefined,
            },
        };
        const requestMessage = {
            message: _1.UpaMessageType.MSG,
            data: {
                command: _1.UpaMessageId.LINEITEM,
                requestId: requestId,
                ecrId: /** builder.ecrId || 12 */ 12,
                data,
            },
        };
        const message = TerminalUtils_1.TerminalUtils.buildUpaRequest(requestMessage);
        const rawResponse = await this.upaController.send(message, _1.UpaMessageId.LINEITEM);
        return new _1.TransactionResponse(rawResponse);
    }
}
exports.UpaInterface = UpaInterface;
//# sourceMappingURL=UpaInterface.js.map