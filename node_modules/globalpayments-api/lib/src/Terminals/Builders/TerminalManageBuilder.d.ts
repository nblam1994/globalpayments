import { CurrencyType, IPaymentMethod, ITerminalResponse, PaymentMethodType, TransactionType } from "../../../src";
import { TerminalBuilder } from "./TerminalBuilder";
export declare class TerminalManageBuilder extends TerminalBuilder {
    amount: number;
    currency: CurrencyType;
    gratuity: number;
    transactionId: string;
    terminalRefNumber?: string;
    constructor(transactionType: TransactionType, paymentMethodType?: PaymentMethodType);
    /**
     * @param string configName
     * @return TerminalResponse
     * @throws \GlobalPayments\Api\Entities\Exceptions\ApiException
     */
    execute(configName?: string): Promise<ITerminalResponse>;
    withAmount(amount: number): this;
    withCurrency(value: CurrencyType): this;
    withGratuity(gratuity: number): this;
    /**
     * Previous request's transaction ID
     *
     * @param string transactionId
     * @return this
     */
    withTransactionId(transactionId: string): this;
    withPaymentMethod(paymentMethod?: IPaymentMethod): this;
    withTerminalRefNumber(terminalRefNumber: string): this;
    withClientTransactionId(clientTransactionId: string): this;
    protected setupValidations(): void;
}
