export declare enum AccountType {
    Checking = "CHECKING",
    Savings = "SAVINGS",
    Credit = "Credit"
}
export declare enum AddressType {
    Billing = 0,
    Shipping = 1
}
export declare enum AgeIndicator {
    NoAccount = "NO_ACCOUNT",
    NoChange = "NO_CHANGE",
    ThisTransaction = "THIS_TRANSACTION",
    LessThanThirtyDays = "LESS_THAN_THIRTY_DAYS",
    ThirtyToSixtyDays = "THIRTY_TO_SIXTY_DAYS",
    MoreThanSixtyDays = "MORE_THAN_SIXTY_DAYS"
}
export declare enum AliasAction {
    Create = "CREATE",
    Add = "ADD",
    Delete = "DELETE"
}
export declare enum AlternativePaymentType {
    AstropayDirect = "astropaydirect",
    Aura = "aura",
    BalotoCash = "baloto",
    Banamex = "banamex",
    BancaAvVillas = "bancaavvillas",
    BancaCajaSocial = "bancacajasocial",
    BancoGnbSudameris = "bancagnbsudameris",
    BancoConsorcio = "bancoconsorcio",
    BancoCooperativoCoopcentral = "bancocooperativocoopcentral",
    BancoCorpbanca = "bancocorpbanca",
    BancoDeBogota = "bancodebogota",
    BancoDeChileEdwardsCiti = "bancodechile",
    BancoDeChileCash = "bancodechilecash",
    BancoDeOccidente = "bancodeoccidente",
    BancoDeOccidenteCash = "bancodeoccidentecash",
    BancoDoBrasil = "bancodobrasil",
    BancoFalabellaChile = "bancofalabellachile",
    BancoFalabellaColumbia = "bancofalabellacolumbia",
    BancoInternational = "bancointernational",
    BancoPichincha = "bancopichincha",
    BancoPopular = "bancopopular",
    BancoProcredit = "bancoprocredit",
    BancoRipley = "bancoripley",
    BancoSantander = "bancosantander",
    BancoSantanderBanefe = "bancosantanderbanefe",
    BancoSecurity = "bancosecurity",
    Bancobice = "bancobice",
    BancoEstado = "bancoestado",
    Bancolombia = "bancolombia",
    Bancomer = "bancomer",
    BancontactMrCash = "bancontact",
    Bancoomeva = "bancoomeva",
    BankIslam = "bankislam",
    BankTransfer = "banktransfer",
    BbvaChile = "bbvachile",
    BbvaColumbia = "bbvacolumbia",
    BciTbanc = "bcitbanc",
    Bitpay = "bitpay",
    BoletoBancario = "boletobancario_",
    Bradesco = "bradesco",
    Cabal = "cabal_",
    CartaoMercadolivre = "cartaomercadolivre",
    Carulla = "carulla",
    Cencosud = "cencosud",
    ChinaUnionPay = "unionpay",
    CimbClicks = "cimbclicks",
    Citibank = "citibank",
    Cmr = "cmr",
    Colpatria = "colpatria",
    Coopeuch = "coopeuch",
    Corpbanca = "corpbanca",
    DanskeBank = "danskebank",
    Davivienda = "davivienda",
    Dragonpay = "dragonpay",
    Easypay = "easypay",
    Efecty = "efecty",
    Elo = "elo",
    EmpresaDeEnergiaDelQuindio = "empresadeenergia",
    Enets = "enets",
    Entercash = "entercash",
    EPayPetronas = "epaypetronas",
    Eps = "EPS",
    EstonianOnlineBankTransfer = "estonianbanks",
    FinlandOnlineBankTransfer = "finlandonlinebt",
    Giropay = "giropay",
    Handelsbanken = "handelsbanken",
    HelmBank = "helm",
    Hipercard = "hipercard",
    HongLeongBank = "hongleongbank",
    Ideal = "ideal",
    IndonesiaAtm = "indonesiaatm",
    InstantTransfer = "instanttransfer",
    InternationalPayOut = "intpayout",
    ItauBrazil = "itaubrazil",
    ItauChile = "itauchile",
    LatvianBt = "latvianbt",
    Link = "link",
    LithuanianOnlineBankTransfer = "lituanianbt",
    Magna = "magna",
    Maxima = "maxima",
    Maybank2u = "maybank2u",
    Multibanco = "multibanco",
    Mybank = "mybank",
    MyclearFpx = "myclearfpx",
    Naranja = "naranja",
    NarvesenLietuvosSpauda = "narvesen",
    Nativa = "nativa",
    Nordea = "nordea",
    Osuuspankki = "osuuspankki",
    Oxxo = "oxxo",
    PagoFacil = "pagofacil",
    PaypostLietuvosPastas = "paypost",
    Paysafecard = "paysafecard",
    PaysbuyCash = "paysbuy",
    Paysera = "paysera",
    Payu = "payu",
    Perlas = "perlas",
    Poli = "poli",
    PolishPayout = "polishpayout",
    Poppankki = "poppankki",
    Postfinance = "postfinance",
    Presto = "presto",
    ProvinciaNet = "provincianet",
    Przelewy24 = "p24",
    Pse = "pse",
    Qiwi = "qiwi",
    QiwiPayout = "qiwipayout",
    RapiPago = "rapipago",
    Redpagos = "redpagos",
    RhbBank = "rhbbank",
    Saastopankki = "sasstopankki",
    Safetypay = "safetypay",
    SantanderBrazil = "santanderbr",
    SantanderMexico = "santandermx",
    SantanderRio = "santanderrio",
    Scotiabank = "scotiabank",
    SepaDirectdebitMerchantMandateModelC = "sepamm",
    SepaDirectdebitPpproMandateModelA = "sepapm",
    SepaPayout = "sepapayout",
    Servipag = "servipag",
    Singpost = "singpost",
    Skrill = "skrill",
    Sofortuberweisung = "sofort",
    Spankki = "spankki",
    Surtimax = "surtimax",
    TarjetaShopping = "tarjeta",
    Teleingreso = "teleingreso",
    Trustly = "trustly",
    Trustpay = "trustpay",
    Webmoney = "webmoney",
    Webpay = "webpay",
    WechatPay = "wechatpay",
    Zimpler = "zimpler",
    UkDirectDebit = "ukdirectdebit",
    TestPay = "testpay",
    Paypal = "paypal",
    Paybybankapp = "paybybankapp",
    Alipay = "alipay"
}
export declare enum ApplicationCryptogramType {
    TC = 0,
    ARQC = 1
}
export declare enum AuthenticationRequestType {
    PaymentTransaction = "PAYMENT_TRANSACTION",
    RecurringTransaction = "RECURRING_TRANSACTION",
    InstalmentTransaction = "INSTALMENT_TRANSACTION",
    AddCard = "ADD_CARD",
    MaintainCard = "MAINTAIN_CARD",
    CardholderVerification = "CARDHOLDER_VERIFICATION"
}
export declare enum AuthenticationSource {
    Browser = "BROWSER",
    StoredRecurring = "STORED_RECURRING",
    MobileSdk = "MOBILE_SDK",
    MerchantInitiated = "MERCHANT_INITIATED"
}
export declare enum BankPaymentType {
    FASTERPAYMENTS = "FASTERPAYMENTS",
    SEPA = "SEPA"
}
export declare enum CardDataInputCapability {
    Unknown = "UNKNOWN",
    NoTerminalManual = "NO_TERMINAL_MANUAL",
    MagstripeReadOnly = "MAGSTRIPE_READ_ONLY",
    Ocr = "OCR",
    IccChipReadOnly = "ICC_CHIP_READ_ONLY",
    KeyedEntryOnly = "KEYED_ENTRY_ONLY",
    MagstripeContactlessOnly = "MAGSTRIPE_CONTACTLESS_ONLY",
    MagstripeKeyedEntryOnly = "MAGSTRIPE_KEYED_ENTRY_ONLY",
    MagstripeIccKeyedEntryOnly = "MAGSTRIPE_ICC_KEYED_ENTRY_ONLY",
    MagstripeIccOnly = "MAGSTRIPE_ICC_ONLY",
    IccKeyedEntryOnly = "ICC_KEYED_ENTRY_ONLY",
    IccChipConctactContactless = "ICC_CHIP_CONTACT_CONTACTLESS",
    IccContactlessOnly = "ICC_CONTACTLESS_ONLY",
    OtherCapabilityForMastercard = "OTHER_CAPABILITY_FOR_MASTERCARD",
    MagstripeSignatureForAmexOnly = "MAGSTRIPE_SIGNATURE_FOR_AMEX_ONLY"
}
export declare enum CardDataOutputCapability {
    None = "NONE",
    MagneticStripeWrite = "MAGNETIC_STRIPE_WRITE",
    Icc = "ICC",
    Other = "OTHER"
}
export declare enum CardHolderAuthenticationCapability {
    NoCapability = "NO_CAPABILITY",
    PinEntry = "PIN_ENTRY",
    SignatureAnalysis = "SIGNATURE_ANALYSIS",
    SignatureAnalysisInoperative = "SIGNATURE_ANALYSIS_INOPERATIVE",
    MposSoftwareBasedPinEntryCapability = "MPOS_SOFTWARE_BASED_PIN_ENTRY_CAPABILITY",
    Other = "OTHER",
    Unknown = "UNKNOWN"
}
export declare enum CardHolderAuthenticationEntity {
    NotAuthenticated = "NOT_AUTHENTICATED",
    IccOfflinePin = "ICC_OFFLINE_PIN",
    CardAcceptanceDevice = "CARD_ACCEPTANCE_DEVICE",
    AuthorizingAgentOnlinePin = "AUTHORIZING_AGENT_ONLINE_PIN",
    MerchantCardAcceptorSignature = "MERCHANT_CARD_ACCEPTOR_SIGNATURE",
    Other = "OTHER"
}
export declare enum CardType {
    VISA = "VISA",
    MASTERCARD = "MASTERCARD",
    DISCOVER = "DISCOVER",
    AMEX = "AMEX",
    JCB = "JCB",
    DINERS = "DINERS"
}
export declare enum CaptureMode {
    AUTO = "AUTO",
    LATER = "LATER",
    MULTIPLE = "MULTIPLE"
}
export declare enum ChallengeRequestIndicator {
    NoPreference = "NO_PREFERENCE",
    NoChallengeRequested = "NO_CHALLENGE_REQUESTED",
    ChallengePreferred = "CHALLENGE_PREFERRED",
    ChallengeMandated = "CHALLENGE_MANDATED",
    NoChallengeRequestedTransactionRiskAnalysisPerformed = "NO_CHALLENGE_REQUESTED_TRANSACTION_RISK_ANALYSIS_PERFORMED",
    NoChallengeRequestedDataShareOnly = "NO_CHALLENGE_REQUESTED_DATA_SHARE_ONLY",
    NoChallengeRequestedScaAlreadyPerformed = "NO_CHALLENGE_REQUESTED_SCA_ALREADY_PERFORMED",
    NoChallengeRequestedWhitelist = "NO_CHALLENGE_REQUESTED_WHITELIST",
    ChallengeRequestedPromptForWhitelist = "CHALLENGE_REQUESTED_PROMPT_FOR_WHITELIST"
}
export declare enum ChallengeWindowSize {
    Windowed250x400 = "WINDOWED_250X400",
    Windowed390x400 = "WINDOWED_390X400",
    Windowed500x600 = "WINDOWED_500X600",
    Windowed600x400 = "WINDOWED_600X400",
    FullScreen = "FULL_SCREEN"
}
export declare enum Channel {
    CardNotPresent = "CNP",
    CardPresent = "CP"
}
export declare enum CheckType {
    Personal = "PERSONAL",
    Business = "BUSINESS",
    Payroll = "PAYROLL"
}
export declare enum ColorDepth {
    OneBit = "ONE_BIT",
    TwoBits = "TWO_BITS",
    FourBits = "FOUR_BITS",
    EightBits = "EIGHT_BITS",
    FifteenBits = "FIFTEEN_BITS",
    SixteenBits = "SIXTEEN_BITS",
    TwentyFourBits = "TWENTY_FOUR_BITS",
    ThirtyTwoBits = "THIRTY_TWO_BITS",
    FortyEightBits = "FORTY_EIGHT_BITS"
}
export declare enum CreditDebitIndicator {
    Credit = "Credit",
    Debit = "Debit"
}
export declare enum CurrencyType {
    CURRENCY = 0,
    POINTS = 1,
    CASH_BENEFITS = 2,
    FOODSTAMPS = 3,
    VOUCHER = 4
}
export declare enum CustomerAuthenticationMethod {
    NotAuthenticated = "NOT_AUTHENTICATED",
    MerchantSystem = "MERCHANT_SYSTEM_AUTHENTICATION",
    FederatedId = "FEDERATED_ID_AUTHENTICATION",
    IssuerCredential = "ISSUER_CREDENTIAL_AUTHENTICATION",
    ThirdParty = "THIRD_PARTY_AUTHENTICATION",
    Fido = "FIDO_AUTHENTICATION"
}
export declare enum CustomerDocumentType {
    NATIONAL = "NATIONAL",
    CPF = "CPF",
    CPNJ = "CPNJ",
    CURP = "CURP",
    SSN = "SSN",
    DRIVER_LICENSE = "DRIVER_LICENSE",
    PASSPORT = "PASSPORT"
}
export declare enum CvnPresenceIndicator {
    Present = 1,
    Illegible = 2,
    NotOnCard = 3,
    NotRequested = 4
}
export declare enum DataServiceCriteria {
    Amount = "amount",
    BankAccountNumber = "bankAccountNumber",
    CaseId = "caseId",
    CardNumberFirstSix = "cardNumberFirstSix",
    CardNumberLastFour = "cardNumberLastFour",
    CaseNumber = "caseNumber",
    Country = "country",
    Currency = "currency",
    DepositReference = "depositReference",
    EndDepositDate = "endDepositDate",
    EndStageDate = "endStageDate",
    Hierarchy = "hierarchy",
    LocalTransactionEndTime = "localTransactionEndTime",
    LocalTransactionStartTime = "localTransactionStartTime",
    MerchantId = "merchantId",
    OrderId = "orderId",
    StartDepositDate = "startDepositDate",
    StartStageDate = "startStageDate",
    SystemHierarchy = "systemHierarchy",
    Timezone = "timezone",
    StartBatchDate = "startBatchDate",
    EndBatchDate = "endBatchDate"
}
export declare enum DecoupledFlowRequest {
    DecoupledPreferred = "DECOUPLED_PREFERRED",
    DoNotUseDecoupled = "DO_NOT_USE_DECOUPLED"
}
export declare enum DeliveryTimeFrame {
    ElectronicDelivery = "ELECTRONIC_DELIVERY",
    SameDay = "SAME_DAY",
    Overnight = "OVERNIGHT",
    TwoDaysOrMore = "TWO_DAYS_OR_MORE"
}
export declare enum DeviceType {
    PAX_DEVICE = 0,
    PAX_D200 = 1,
    PAX_D210 = 2,
    PAX_S300 = 3,
    PAX_PX5 = 4,
    PAX_PX7 = 5,
    HPA_ISC250 = 6,
    HPA_LANE3000 = 7,
    UPA_DEVICE = 8,
    GENIUS = 9,
    NUCLEUS_SATURN_1000 = 10,
    GENIUS_VERIFONE_P400 = 11
}
export declare enum DigitalWalletTokenFormat {
    CARD_NUMBER = "CARD_NUMBER",
    CARD_TOKEN = "CARD_TOKEN"
}
export declare enum EcommerceChannel {
    Ecom = "ECOM",
    Moto = "MOTO"
}
export declare enum EmailReceipt {
    Never = "Never",
    All = "All",
    Approvals = "Approvals",
    Declines = "Declines"
}
export declare enum EncyptedMobileType {
    ApplePay = "apple-pay",
    GooglePay = "pay-with-google",
    ClickToPay = "click-to-pay"
}
export declare enum EntryMethod {
    Swipe = "SWIPE",
    Proximity = "PROXIMITY",
    Manual = "MANUAL"
}
export declare enum Environment {
    Test = "TEST",
    Production = "PRODUCTION",
    Qa = "QA"
}
export declare enum EmvLastChipRead {
    SUCCESSFUL = "Successful",
    FAILED = "Failed",
    NOT_A_CHIP_TRANSACTION = "NotAChipTransaction",
    UNKNOWN = "Unknown"
}
export declare enum ExceptionCodes {
    AuthenticationError = 0,
    InvalidConfiguration = 1,
    InvalidAmount = 2,
    MissingCurrency = 3,
    InvalidCurrency = 4,
    InvalidDate = 5,
    MissingCheckName = 6,
    InvalidPhoneNumber = 7,
    InvalidZipCode = 8,
    InvalidEmailAddress = 9,
    InvalidInputLength = 10,
    UnknownGatewayError = 11,
    InvalidOriginalTransaction = 12,
    NoOpenBatch = 13,
    InvalidCpcData = 14,
    InvalidCardData = 15,
    InvalidNumber = 16,
    GatewayTimeout = 17,
    UnexpectedGatewayResponse = 18,
    GatewayTimeoutReversalError = 19,
    GatewayError = 20,
    UnexpectedGatewayError = 21,
    IncorrectNumber = 22,
    ExpiredCard = 23,
    InvalidPin = 24,
    PinEntriesExceeded = 25,
    InvalidExpiry = 26,
    PinVerification = 27,
    IssuerTimeout = 28,
    IncorrectCvc = 29,
    CardDeclined = 30,
    ProcessingError = 31,
    IssuerTimeoutReversalError = 32,
    UnknownCreditError = 33,
    PossibleFraudDetected = 34,
    UnknownGiftError = 35,
    PartialApproval = 36
}
export declare enum ExemptionReason {
    ApplyExemption = "APPLY_EXEMPTION",
    EosContinue = "CONTINUE",
    ForceSecure = "FORCE_SECURE",
    Block = "BLOCK"
}
export declare enum ExemptStatus {
    LowValue = "LOW_VALUE",
    TransactionRiskAnalysis = "TRANSACTION_RISK_ANALYSIS",
    TrustedMerchant = "TRUSTED_MERCHANT",
    SecureCorporatePayment = "SECURE_CORPORATE_PAYMENT",
    ScaDelegation = "SCA_DELEGATION"
}
export declare enum FraudFilterMode {
    None = "NONE",
    Off = "OFF",
    Active = "ACTIVE",
    Passive = "PASSIVE"
}
export declare enum GatewayProvider {
    GpApi = "GP-API",
    GpEcom = "GP_ECOM",
    Portico = "PORTICO"
}
export declare enum GiftEntryMethod {
    Swipe = 0,
    Alias = 1,
    Manual = 2
}
export declare enum HppVersion {
    Version1 = "1",
    Version2 = "2"
}
export declare enum InquiryType {
    Standard = "STANDARD",
    Foodstamp = "FOODSTAMP",
    Cash = "CASH",
    Points = "POINTS"
}
export declare enum IntervalToExpire {
    WEEK = "WEEK",
    DAY = "DAY",
    TWELVE_HOURS = "12_HOURS",
    SIX_HOURS = "6_HOURS",
    THREE_HOURS = "3_HOURS",
    ONE_HOUR = "1_HOUR",
    THIRTY_MINUTES = "30_MINUTES",
    TEN_MINUTES = "10_MINUTES",
    FIVE_MINUTES = "5_MINUTES"
}
export declare enum LodgingItemType {
    RESTAURANT = "RESTAURANT",
    GIFT_SHOP = "GIFT_SHOP",
    MINI_BAR = "MINI_BAR",
    PHONE = "PHONE",
    LAUNDRY = "LAUNDRY",
    OTHER = "OTHER",
    NO_SHOW = "NO_SHOW"
}
export declare enum ManualEntryMethod {
    MOTO = 0,
    MAIL = 1,
    PHONE = 2,
    KEYED = 3
}
export declare enum MessageCategory {
    PaymentAuthentication = "PAYMENT_AUTHENTICATION",
    NonPaymentAuthentication = "NON_PAYMENT_AUTHENTICATION"
}
export declare enum MessageVersion {
    Version210 = "2.1.0"
}
export declare enum MethodUrlCompletion {
    Yes = "YES",
    No = "NO",
    Unavailable = "UNAVAILABLE"
}
export declare enum NetGrossIndicator {
    NET = "NET",
    GROSS = "GROSS"
}
export declare enum OrderTransactionType {
    GoodsServicePurchase = "GOODS_SERVICE_PURCHASE",
    CheckAcceptance = "CHECK_ACCEPTANCE",
    AccountFunding = "ACCOUNT_FUNDING",
    QuasiCashTransaction = "QUASI_CASH_TRANSACTION",
    PrepaidActivationAndLoad = "PREPAID_ACTIVATION_AND_LOAD"
}
export declare enum PayByLinkStatus {
    ACTIVE = "ACTIVE",
    INACTIVE = "INACTIVE",
    CLOSED = "CLOSED",
    EXPIRED = "EXPIRED",
    PAID = "PAID"
}
export declare enum PaymentEntryMode {
    MOTO = "MOTO",
    ECOM = "ECOM",
    IN_APP = "IN_APP",
    CHIP = "CHIP",
    SWIPE = "SWIPE",
    MANUAL = "MANUAL",
    CONTACTLESS_CHIP = "CONTACTLESS_CHIP",
    CONTACTLESS_SWIPE = "CONTACTLESS_SWIPE",
    PHONE = "PHONE",
    MAIL = "MAIL"
}
export declare enum PaymentMethodName {
    APM = "APM",
    DIGITAL_WALLET = "DIGITAL WALLET",
    CARD = "CARD",
    /**
     * ACH transaction
     */
    BANK_TRANSFER = "BANK TRANSFER",
    /** Open Banking transaction */
    BANK_PAYMENT = "BANK PAYMENT",
    /** @var Buy Now Pay Later (BNPL) transaction */
    BNPL = "BNPL"
}
export declare enum PaymentMethodProgram {
    ASSURED_RESERVATION = "ASSURED_RESERVATION",
    CARD_DEPOSIT = "CARD_DEPOSIT",
    PURCHASE = "PURCHASE",
    OTHER = "OTHER"
}
export declare enum PaymentMethodType {
    Reference = 1,
    Credit = 2,
    Debit = 4,
    EBT = 8,
    Cash = 16,
    ACH = 32,
    Gift = 64,
    Recurring = 128,
    Other = 256,
    APM = 512,
    Ewic = 1024,
    BankPayment = 2048,
    BNPL = 4096,
    Account_Funds = 8192
}
export declare enum PaymentMethodUsageMode {
    SINGLE = "SINGLE",
    MULTIPLE = "MULTIPLE"
}
export declare enum PaymentProvider {
    OPEN_BANKING = "OPEN_BANKING"
}
export declare enum PaymentSchedule {
    Dynamic = 0,
    FirstDayOfTheMonth = 1,
    LastDayOfTheMonth = 2
}
export declare enum PaymentType {
    REFUND = "REFUND",
    SALE = "SALE"
}
export declare enum PhoneNumberType {
    HOME = "HOME",
    WORK = "WORK",
    SHIPPING = "SHIPPING",
    MOBILE = "MOBILE"
}
export declare enum PreOrderIndicator {
    MerchandiseAvailable = "MERCHANDISE_AVAILABLE",
    FutureAvailability = "FUTURE_AVAILABILITY"
}
export declare enum PriorAuthenticationMethod {
    FrictionlessAuthentication = "FRICTIONLESS_AUTHENTICATION",
    ChallengeOccurred = "CHALLENGE_OCCURRED",
    AvsVerified = "AVS_VERIFIED",
    OtherIssuerMethod = "OTHER_ISSUER_METHOD"
}
export declare enum ReasonCode {
    Fraud = "FRAUD",
    FalsePositive = "FALSEPOSITIVE",
    OutOfStock = "OUTOFSTOCK",
    InStock = "INSTOCK",
    Other = "OTHER",
    NotGiven = "NOTGIVEN"
}
export declare enum RecurringSequence {
    First = 0,
    Subsequent = 1,
    Last = 2
}
export declare enum RecurringType {
    Fixed = 0,
    Variable = 1
}
export declare enum ReorderIndicator {
    FirstTimeOrder = "FIRST_TIME_ORDER",
    Reorder = "REORDER"
}
export declare enum ReportType {
    FindTransactions = 1,
    Activity = 2,
    BatchDetail = 4,
    BatchHistory = 8,
    DocumentDisputeDetail = 8,
    BatchSummary = 16,
    OpenAuths = 32,
    Search = 64,
    TransactionDetail = 128,
    FindDeposits = 256,
    DepositDetail = 2048,
    DisputeDetail = 4096,
    SettlementDisputeDetail = 8192,
    FindTransactionsPaged = 32768,
    FindSettlementTransactionsPaged = 65536,
    FindDepositsPaged = 131072,
    FindDisputesPaged = 262144,
    FindSettlementDisputesPaged = 524288,
    FindStoredPaymentMethodsPaged = 1048576,
    StoredPaymentMethodDetail = 2097152
}
export declare enum ScheduleFrequency {
    Weekly = "Weekly",
    BiWeekly = "Bi-Weekly",
    BiMonthly = "Bi-Monthly",
    SemiMonthly = "Semi-Monthly",
    Monthly = "Monthly",
    Quarterly = "Quarterly",
    SemiAnnually = "Semi-Annually",
    Annually = "Annually"
}
export declare enum SdkInterface {
    Native = "NATIVE",
    Browser = "BROWSER",
    Both = "BOTH"
}
export declare enum SdkUiType {
    Text = "TEXT",
    SingleSelect = "SINGLE_SELECT",
    MultiSelect = "MULTI_SELECT",
    Oob = "OOB",
    HtmlOther = "HTML_OTHER"
}
export declare enum SearchCriteria {
    AccountName = "accountName",
    AccountNumberLastFour = "accountNumberLastFour",
    AltPaymentStatus = "altPaymentStatus",
    AquirerReferenceNumber = "aquirerReferenceNumber",
    AuthCode = "authCode",
    BankRoutingNumber = "bankRoutingNumber",
    BatchId = "batchId",
    BatchSequenceNumber = "batchSequenceNumber",
    BrandReference = "brandReference",
    BuyerEmailAddress = "buyerEmailAddress",
    CardBrand = "cardBrand",
    CardHolderFirstName = "cardHolderFirstName",
    CardHolderLastName = "cardHolderLastName",
    CardHolderPoNumber = "cardHolderPoNumber",
    CardNumberFirstSix = "cardNumberFirstSix",
    CardNumberLastFour = "cardNumberLastFour",
    Channel = "channel",
    CheckFirstName = "checkFirstName",
    CheckLastName = "checkLastName",
    CheckName = "checkName",
    CheckNumber = "checkNumber",
    ClerkId = "clerkId",
    ClientTransactionId = "clientTransactionId",
    CustomerId = "customerId",
    DepositReference = "",
    DepositStatus = "depositStatus",
    DisplayName = "displayName",
    EndDate = "endDate",
    FullyCaptured = "fullyCaptured",
    GiftCurrency = "giftCurrency",
    GiftMaskedAlias = "giftMaskedAlias",
    InvoiceNumber = "invoiceNumber",
    IssuerResult = "issuerResult",
    IssuerTransactionId = "issuerTransactionId",
    OneTime = "oneTime",
    PaymentEntryMode = "paymentEntryMode",
    PaymentMethodKey = "paymentMethodKey",
    PaymentMethodType = "paymentMethodType",
    PaymentType = "paymentType",
    PaymentMethod = "paymentMethod",
    PaymentMethodName = "paymentMethodName",
    PaymentMethodUsageMode = "paymentMethodUsageMode",
    PaymentProvider = "paymentProvider",
    ReferenceNumber = "referenceNumber",
    SettlementAmount = "settlementAmount",
    ScheduleId = "scheduleId",
    SiteTrace = "siteTrace",
    StartDate = "startDate",
    TokenFirstSix = "tokenFirstSix",
    TokenLastFour = "tokenLastFour",
    TransactionStatus = "transactionStatus",
    DisputeStage = "disputeStage",
    DisputeStatus = "disputeStatus",
    DisputeDocumentId = "disputeDocumentId",
    UniqueDeviceId = "uniqueDeviceId",
    UserName = "username",
    Name = "name",
    DepositId = "depositId",
    FromTimeLastUpdated = "fromTimeLastUpdated",
    ToTimeLastUpdated = "toTimeLastUpdated",
    StoredPaymentMethodId = "storedPaymentMethodId",
    StoredPaymentMethodStatus = "storedPaymentMethodStatus",
    ActionType = "actionType",
    ActionId = "actionId",
    Resource = "resource",
    ResourceStatus = "resourceStatus",
    ResourceId = "resourceId",
    MerchantName = "merchantName",
    AppName = "appName",
    Version = "version",
    ResponseCode = "responseCode",
    HttpResponseCode = "httpResponseCode",
    ReturnPii = "returnPii",
    RiskAssessmentMode = "riskAssessmentMode",
    RiskAssessmentResult = "riskAssessmentResult",
    RiskAssessmentReasonCode = "riskAssessmentReasonCode",
    PayByLinkStatus = "payByLinkStatus",
    Description = "description",
    ExpirationDate = "expirationDate",
    AccountStatus = "accountStatus",
    Address = "address"
}
export declare enum SecCode {
    PPD = "PPD",
    CCD = "CCD",
    POP = "POP",
    WEB = "WEB",
    TEL = "TEL",
    EBronze = "EBronze"
}
export declare enum Secure3dStatus {
    SuccessAuthenticated = "SUCCESS_AUTHENTICATED",
    SuccessAttemptMade = "SUCCESS_ATTEMPT_MADE",
    NotAuthenticated = "NOT_AUTHENTICATED",
    Failed = "FAILED",
    NotEnrolled = "NOT_ENROLLED",
    Available = "AVAILABLE",
    Enrolled = "ENROLLED",
    ChallengeRequired = "CHALLENGE_REQUIRED"
}
export declare enum Secure3dVersion {
    NONE = "NONE",
    ONE = "ONE",
    TWO = "TWO",
    ANY = "ANY"
}
export declare enum SendFileType {
    Banner = 0,
    Logo = 1
}
export declare enum ShaHashType {
    SHA1 = "SHA1",
    SHA256 = "SHA256",
    SHA512 = "SHA512"
}
export declare enum ShippingMethod {
    BillingAddress = "BILLING_ADDRESS",
    VerifiedAddress = "ANOTHER_VERIFIED_ADDRESS",
    UnverifiedAddress = "UNVERIFIED_ADDRESS",
    ShipToStore = "SHIP_TO_STORE",
    DigitalGoods = "DIGITAL_GOODS",
    TravelAndEventTickets = "TRAVEL_AND_EVENT_TICKETS",
    Other = "OTHER"
}
export declare enum SortDirection {
    Asc = "ASC",
    Desc = "DESC"
}
export declare enum StoredCredentialInitiator {
    CardHolder = "C",
    Merchant = "M",
    Payer = "Payer"
}
export declare enum StoredCredentialReason {
    INCREMENTAL = "INCREMENTAL",
    RESUBMISSION = "RESUBMISSION",
    REAUTHORIZATION = "REAUTHORIZATION",
    DELAYED = "DELAYED",
    NO_SHOW = "NO_SHOW"
}
export declare enum StoredCredentialSequence {
    FIRST = "first",
    SUBSEQUENT = "subsequent",
    LAST = "last"
}
export declare enum StoredCredentialType {
    ONEOFF = "oneoff",
    INSTALLMENT = "installment",
    RECURRING = "recurring",
    UNSCHEDULED = "UNSCHEDULED",
    SUBSCRIPTION = "SUBSCRIPTION",
    MAINTAIN_PAYMENT_METHOD = "MAINTAIN_PAYMENT_METHOD",
    MAINTAIN_PAYMENT_VERIFICATION = "MAINTAIN_PAYMENT_VERIFICATION",
    ADD_PAYMENT_METHOD = "ADD_PAYMENT_METHOD",
    SPLIT_OR_DELAYED_SHIPMENT = "SPLIT_OR_DELAYED_SHIPMENT",
    TOP_UP = "TOP_UP",
    MAIL_ORDER = "MAIL_ORDER",
    TELEPHONE_ORDER = "TELEPHONE_ORDER",
    WHITELIST_STATUS_CHECK = "WHITELIST_STATUS_CHECK",
    OTHER_PAYMENT = "OTHER_PAYMENT",
    BILLING_AGREEMENT = "BILLING_AGREEMENT"
}
export declare enum StoredPaymentMethodSortProperty {
    TimeCreated = "TIME_CREATED"
}
export declare enum TaxType {
    NotUsed = 0,
    SalesTax = 1,
    TaxExempt = 2
}
export declare enum TimeZoneConversion {
    UTC = 0,
    Merchant = 1,
    Datacenter = 2
}
export declare enum TrackNumber {
    UNKNOWN = 0,
    TRACK_ONE = 1,
    TRACK_TWO = 2,
    BOTH_ONE_AND_TWO = 3
}
export declare enum TransactionModifier {
    None = 1,
    Incremental = 2,
    Additional = 4,
    Offline = 8,
    LevelII = 16,
    FraudDecline = 32,
    ChipDecline = 64,
    CashBack = 128,
    Voucher = 256,
    Secure3D = 512,
    HostedRequest = 1024,
    Recurring = 2048,
    EncryptedMobile = 4096,
    AlternativePaymentMethod = 8192,
    DecryptedMobile = 16384,
    LevelIII = 32768
}
export declare enum TransactionSortProperty {
    TIME_CREATED = "TIME_CREATED",
    STATUS = "STATUS",
    TYPE = "TYPE",
    DEPOSIT_ID = "DEPOSIT_ID",
    ID = "ID"
}
export declare enum TransactionType {
    Decline = 1,
    Verify = 2,
    Capture = 4,
    Auth = 8,
    Refund = 16,
    Reversal = 32,
    Sale = 64,
    Edit = 128,
    Void = 256,
    AddValue = 512,
    Balance = 1024,
    Activate = 2048,
    EncryptedMobile = 2048,
    Alias = 4096,
    Replace = 8192,
    Reward = 16384,
    DecryptedMobile = 16384,
    Deactivate = 32768,
    BatchClose = 65536,
    Create = 131072,
    Delete = 262144,
    BenefitWithDrawal = 1,
    Fetch = 524288,
    Search = 1048576,
    Hold = 2097152,
    Release = 8388608,
    DccRateLookup = 8388608,
    VerifyEnrolled = 16777216,
    VerifySignature = 33554432,
    TokenDelete = 67108864,
    RiskAssess = 134217728,
    InitiateAuthentication = 268435456,
    TokenUpdate = -2147483648,
    Tokenize = 2,
    CreateAccount = 256,
    EditAccount = 512,
    ResetPassword = 1024,
    RenewAccount = 2048,
    UpdateBeneficialOwnership = 4096,
    DisownAccount = 8192,
    UploadDocumentChargeback = 16384,
    UploadDocument = 32768,
    ObtainSSOKey = 65536,
    UpdateBankAccountOwnership = 131072,
    AddFunds = 262144,
    SweepFunds = 524288,
    AddCardFlashFunds = 1048576,
    Detokenize = 1048576,
    PushMoneyFlashFunds = 2097152,
    DisputeAcceptance = 2097152,
    DisputeChallenge = 4194304,
    DisburseFunds = 4194304,
    SpendBack = 8388608,
    ReverseSplitPay = 16777216,
    Confirm = 16777216,
    SplitFunds = 33554432,
    GetAccountDetails = 67108864,
    GetAccountBalance = 134217728,
    Reauth = 268435456,
    SiteConfig = 536870912,
    TimeRequest = 1073741824,
    GetTokenInfo = -2147483648,
    PayLinkUpdate = -2147483648,
    OrderDevice = 1
}
export declare enum ProPayAccountStatus {
    ReadyToProcess = 0,
    FraudAccount = 1,
    RiskwiseDeclined = 2,
    Hold = 3,
    Canceled = 4,
    FraudVictim = 5,
    ClosedEula = 6,
    ClosedExcessiveChargeback = 7
}
export declare enum MobilePaymentMethodType {
    APPLEPAY = "apple-pay",
    GOOGLEPAY = "pay-with-google"
}
export declare enum PaymentDataSourceType {
    APPLEPAY = "ApplePay",
    APPLEPAYAPP = "ApplePayApp",
    APPLEPAYWEB = "ApplePayWeb",
    GOOGLEPAYAPP = "GooglePayApp",
    GOOGLEPAYWEB = "GooglePayWeb",
    DISCOVER3DSECURE = "Discover 3DSecure"
}
export declare enum PropayTermsVersion {
    merchantUS = 1,
    paymentUS = 2,
    merchantCA = 3,
    merchantUK = 4,
    merchantAU = 5
}
