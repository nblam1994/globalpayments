export declare class AlternativePaymentResponse {
    /**
     * bank account details
     */
    bankAccount: string | null;
    /**
     * Account holder name of the customerâ€™s account
     */
    accountHolderName: string | null;
    /**
     * 2 character ISO country code
     */
    country: string;
    /**
     * URL to redirect the customer to - only available in PENDING asynchronous transactions.
     * Sent there so merchant can redirect consumer to complete an interrupted payment.
     */
    redirectUrl: number | string | null;
    /**
     * This parameter reflects what the customer will see on the proof of payment
     * (for example, bank statement record and similar). Also known as the payment descriptor
     */
    paymentPurpose: string;
    /**
     *
     */
    paymentMethod: string;
    /**
     * The provider reference
     */
    providerReference: string;
    /**
     * The APM provider name
     */
    providerName: string;
    ack: string;
    sessionToken: string;
    correlationReference: string;
    versionReference: string;
    buildReference: string;
    timeCreatedReference: string;
    transactionReference: string;
    secureAccountReference: string;
    reasonCode: string;
    pendingReason: string;
    grossAmount: string;
    paymentTimeReference: string;
    paymentType: string;
    paymentStatus: string;
    type: string;
    protectionEligibilty: string;
    authStatus: string;
    authAmount: string;
    authAck: string;
    authCorrelationReference: string;
    authVersionReference: string;
    authBuildReference: string;
    authPendingReason: string;
    authProtectionEligibilty: string;
    authProtectionEligibiltyType: string;
    authReference: string;
    feeAmount: string;
    nextAction: string | null;
    secondsToExpire: string | null;
    qrCodeImage: string | null;
}
