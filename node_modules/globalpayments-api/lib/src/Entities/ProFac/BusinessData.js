"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BusinessData = void 0;
const Entities_1 = require("../../Entities");
class BusinessData {
    /// <summary>
    /// The legal name of the business as registered
    /// </summary>
    businessLegalName;
    /// <summary>
    /// This field can be used to provide DBA information on an account. ProPay accounts can be configured to display DBA on cc statements. (Note most banks' CC statements allow for 29 characters)
    /// </summary>
    doingBusinessAs;
    /// <summary>
    /// EIN - 9 characters without dashes
    /// </summary>
    employerIdentificationNumber;
    /// <summary>
    /// Merchant Category Code
    /// </summary>
    merchantCategoryCode;
    /// <summary>
    /// The business' website URL
    /// </summary>
    websiteURL;
    /// <summary>
    /// The business' description
    /// </summary>
    businessDescription;
    /// <summary>
    /// The monthly colume of bank card transactions; Value representing the number of pennies in USD, or the number of [currency] without decimals. Defaults to $1000.00 if not sent.
    /// </summary>
    monthlyBankCardVolume;
    /// <summary>
    /// The average amount of an individual transaction; Value representing the number of pennies in USD, or the number of [currency] without decimals. Defaults to $300.00 if not sent.
    /// </summary>
    averageTicket;
    /// <summary>
    /// The highest transaction amount; Value representing the number of pennies in USD, or the number of [currency] without decimals. Defaults to $300.00 if not sent.
    /// </summary>
    highestTicket;
    // The business' address
    businessAddress;
    businessType;
    constructor() {
        this.businessAddress = new Entities_1.Address();
    }
}
exports.BusinessData = BusinessData;
//# sourceMappingURL=BusinessData.js.map