"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Validations = void 0;
const __1 = require("../../");
const ValidationTarget_1 = require("./ValidationTarget");
class Validations {
    rules;
    constructor() {
        this.rules = {};
    }
    of(enumProperty, type) {
        if (!this.rules.hasOwnProperty(enumProperty)) {
            this.rules[enumProperty] = {};
        }
        if (!this.rules[enumProperty].hasOwnProperty(type.toString())) {
            this.rules[enumProperty][type.toString()] = [];
        }
        const target = new ValidationTarget_1.ValidationTarget(this, enumProperty, type);
        this.rules[enumProperty][type].push(target);
        return target;
    }
    validate(builder) {
        Object.keys(this.rules).forEach((enumName) => {
            Object.keys(this.rules[enumName]).forEach((ruleType) => {
                let value = builder[enumName];
                if ((value === undefined || value === null) &&
                    builder instanceof __1.TransactionBuilder &&
                    builder.paymentMethod) {
                    value = builder.paymentMethod[enumName];
                    if (value === undefined || value === null) {
                        return;
                    }
                }
                if ((Number(ruleType) & value) !== value || Number(ruleType) > value) {
                    return;
                }
                for (const validation of this.rules[enumName][ruleType]) {
                    if (!validation.clause) {
                        continue;
                    }
                    if (validation.constraint !== undefined &&
                        validation.constraint !== null &&
                        validation.constraint !== builder[validation.constraintProperty]) {
                        continue;
                    }
                    if (!validation.clause.callback(builder)) {
                        throw new __1.BuilderError(validation.clause.message);
                    }
                }
            });
        });
    }
}
exports.Validations = Validations;
//# sourceMappingURL=Validations.js.map