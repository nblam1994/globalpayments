import { DepositSortProperty, DisputeSortProperty, ReportType, SearchCriteriaBuilder, SortDirection, StoredPaymentMethodSortProperty, TransactionSortProperty } from "../";
import { ReportBuilder } from "./ReportBuilder";
import { IDictionary } from "./BaseBuilder";
export declare class TransactionReportBuilder<T> extends ReportBuilder<T> {
    deviceId: string;
    endDate: Date;
    startDate: Date;
    transactionId: string;
    searchCriteria: IDictionary<string>;
    depositOrderBy: DepositSortProperty;
    disputeOrderBy: DisputeSortProperty;
    constructor(type: ReportType);
    setupValidations(): void;
    withDeviceId(deviceId?: string): this;
    withDisputeId(disputeId?: string | null): this;
    withEndDate(endDate?: Date): this;
    withStartDate(startDate?: Date): this;
    withStoredPaymentMethodId(storedPaymentMethodId?: string): this;
    withTransactionId(transactionId?: string): this;
    withDepositId(depositId: string): this;
    withSettlementDisputeId(settlementDisputeId: string): this;
    where(criteria: string, value: any): SearchCriteriaBuilder<T>;
    orderBy(sortProperty: StoredPaymentMethodSortProperty | TransactionSortProperty | DepositSortProperty | DisputeSortProperty, sortDirection?: SortDirection): this;
}
