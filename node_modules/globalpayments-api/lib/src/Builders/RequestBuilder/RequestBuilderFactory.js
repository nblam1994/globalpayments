"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestBuilderFactory = void 0;
const _1 = require(".");
const Entities_1 = require("../../Entities/");
const GpApiManagementRequestBuilder_1 = require("./GpApi/GpApiManagementRequestBuilder");
const GpApiMiCRequestBuilder_1 = require("./GpApi/GpApiMiCRequestBuilder");
const GpEcomAuthorizationRequestBuilder_1 = require("./GpEcom/GpEcomAuthorizationRequestBuilder");
const GpEcomManagementRequestBuilder_1 = require("./GpEcom/GpEcomManagementRequestBuilder");
const GpApiReportRequestBuilder_1 = require("./GpApi/GpApiReportRequestBuilder");
const GpApiSecureRequestBuilder_1 = require("./GpApi/GpApiSecureRequestBuilder");
class RequestBuilderFactory {
    supplementaryData;
    static processes = {
        [Entities_1.GatewayProvider.GpApi]: [
            new _1.GpApiAuthorizationRequestBuilder(),
            new GpApiManagementRequestBuilder_1.GpApiManagementRequestBuilder(),
            new GpApiReportRequestBuilder_1.GpApiReportRequestBuilder(),
            new GpApiSecureRequestBuilder_1.GpApiSecureRequestBuilder(),
            new GpApiMiCRequestBuilder_1.GpApiMiCRequestBuilder(),
        ],
        [Entities_1.GatewayProvider.GpEcom]: [
            new GpEcomAuthorizationRequestBuilder_1.GpEcomAuthorizationRequestBuilder(),
            new GpEcomManagementRequestBuilder_1.GpEcomManagementRequestBuilder(),
        ],
        [Entities_1.GatewayProvider.Portico]: [],
    };
    getRequestBuilder(builder, gatewayProvider) {
        if (!RequestBuilderFactory.processes[gatewayProvider]) {
            return null;
        }
        for (const processName of RequestBuilderFactory.processes[gatewayProvider]) {
            if (processName.canProcess(builder)) {
                return processName;
            }
        }
        return null;
    }
}
exports.RequestBuilderFactory = RequestBuilderFactory;
//# sourceMappingURL=RequestBuilderFactory.js.map