import { AuthorizationBuilder, BaseBuilder, GpApiConfig, GpApiRequest, IRequestBuilder, Transaction, FraudFilterMode } from "../../../../src";
type FraudManagement = {
    mode: FraudFilterMode;
    rules?: {
        reference: string;
        mode: FraudFilterMode;
    }[];
};
export declare class GpApiAuthorizationRequestBuilder implements IRequestBuilder {
    private builder;
    private maskedValues;
    /***
     * @param AuthorizationBuilder builder
     *
     * @return bool
     */
    canProcess(builder: BaseBuilder<Transaction>): boolean;
    /**
     * @param BaseBuilder builder
     * @param GpApiConfig config
     * @return GpApiRequest|string
     */
    buildRequest(builder: AuthorizationBuilder, config: GpApiConfig): GpApiRequest;
    private generateVerificationRequest;
    private createPaymentMethodParam;
    private createFromAuthorizationBuilder;
    private setNotificationUrls;
    private setOrderInformation;
    private setItemDetailsListForApm;
    private setRequestStoredCredentials;
    private setPayerInformation;
    private getPhoneNumber;
    private getEntryMode;
    private getCaptureMode;
    mapFraudManagement(): FraudManagement;
    buildRequestFromJson(jsonRequest: string, config: GpApiConfig): void;
}
export {};
