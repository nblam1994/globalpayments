import { IPaymentMethod, PaymentMethod, TransactionModifier, TransactionReference, TransactionType } from "../";
import { BaseBuilder } from "./BaseBuilder";
export declare abstract class TransactionBuilder<T> extends BaseBuilder<T> {
    paymentMethod: PaymentMethod | TransactionReference;
    transactionType: TransactionType;
    transactionModifier: TransactionModifier;
    supplementaryData: Record<string, string | string[]>;
    constructor(type: TransactionType, paymentMethod?: IPaymentMethod);
    withModifier(modifier?: TransactionModifier): this;
    withSupplementaryData(key: Record<string, string | string[]> | string, value?: string | string[]): this;
    withAllowDuplicates(allowDuplicates: boolean): this;
}
