import { PaymentMethod } from "src/PaymentMethods";
import { Address, AddressType, AgeIndicator, AuthenticationSource, CustomerAuthenticationMethod, DeliveryTimeFrame, OrderTransactionType, PhoneNumberType, PreOrderIndicator, PriorAuthenticationMethod, ReorderIndicator, ShippingMethod, TransactionType } from "../../src/Entities";
import { BaseBuilder } from "./BaseBuilder";
import { BrowserData } from "src/Entities/BrowserData";
export declare abstract class SecureBuilder<T> extends BaseBuilder<T> {
    private amount;
    private currency;
    private orderCreateDate;
    private orderTransactionType;
    private orderId;
    private referenceNumber;
    private addressMatchIndicator;
    private shippingAddress;
    private shippingMethod;
    private shippingNameMatchesCardHolderName;
    private shippingAddressCreateDate;
    shippingAddressUsageIndicator: AgeIndicator;
    private giftCardAmount;
    private giftCardCount;
    private giftCardCurrency;
    private deliveryEmail;
    private deliveryTimeframe;
    private preOrderAvailabilityDate;
    private preOrderIndicator;
    private reorderIndicator;
    private customerAccountId;
    private accountAgeIndicator;
    private accountChangeDate;
    private accountCreateDate;
    private accountChangeIndicator;
    private passwordChangeDate;
    private passwordChangeIndicator;
    private phoneList;
    private homeCountryCode;
    private homeNumber;
    private workCountryCode;
    private workNumber;
    private mobileCountryCode;
    private mobileNumber;
    private paymentAccountCreateDate;
    private paymentAgeIndicator;
    private previousSuspiciousActivity;
    private numberOfPurchasesInLastSixMonths;
    private numberOfTransactionsInLast24Hours;
    private numberOfAddCardAttemptsInLast24Hours;
    private numberOfTransactionsInLastYear;
    private browserData;
    private priorAuthenticationData;
    private priorAuthenticationMethod;
    private priorAuthenticationTransactionId;
    private priorAuthenticationTimestamp;
    private maxNumberOfInstallments;
    private recurringAuthorizationExpiryDate;
    private recurringAuthorizationFrequency;
    private customerAuthenticationData;
    private customerAuthenticationMethod;
    private customerAuthenticationTimestamp;
    idempotencyKey: string;
    protected authenticationSource: AuthenticationSource;
    paymentMethod: PaymentMethod | null;
    billingAddress: Address;
    /**************************************GETTERS**************************************/
    /** @returns string|number */
    getAmount(): string | number;
    /** @returns string */
    getCurrency(): string;
    /** @returns AuthenticationSource */
    getAuthenticationSource(): AuthenticationSource;
    /** @returns Date */
    getOrderCreateDate(): string;
    /** @returns string */
    getOrderId(): string;
    /** @returns OrderTransactionType */
    getOrderTransactionType(): OrderTransactionType;
    /** @returns string */
    getReferenceNumber(): string;
    /** @returns boolean */
    isAddressMatchIndicator(): boolean;
    /** @returns Address */
    getShippingAddress(): Address;
    /** @returns ShippingMethod */
    getShippingMethod(): ShippingMethod;
    /** @returns boolean */
    getShippingNameMatchesCardHolderName(): boolean;
    /** @returns Date */
    getShippingAddressCreateDate(): Date;
    /** @returns AgeIndicator */
    getShippingAddressUsageIndicator(): AgeIndicator;
    /** @returns number */
    getGiftCardCount(): number;
    /** @returns string */
    getGiftCardCurrency(): string;
    /** @returns number */
    getGiftCardAmount(): number;
    /** @returns string */
    getDeliveryEmail(): string;
    /** @returns DeliveryTimeFrame */
    getDeliveryTimeframe(): DeliveryTimeFrame;
    /** @returns Date */
    getPreOrderAvailabilityDate(): Date;
    /** @returns PreOrderIndicator */
    getPreOrderIndicator(): PreOrderIndicator;
    /** @returns ReorderIndicator */
    getReorderIndicator(): ReorderIndicator;
    /** @returns string */
    getCustomerAccountId(): string;
    /** @returns AgeIndicator */
    getAccountAgeIndicator(): AgeIndicator;
    /** @returns Date */
    getAccountChangeDate(): Date;
    /** @returns Date */
    getAccountCreateDate(): Date;
    /** @returns AgeIndicator */
    getAccountChangeIndicator(): AgeIndicator;
    /** @returns Date */
    getPasswordChangeDate(): Date;
    /** @returns AgeIndicator */
    getPasswordChangeIndicator(): AgeIndicator;
    /** @returns string */
    getHomeCountryCode(): string;
    /** @returns string */
    getHomeNumber(): string;
    /** @returns string */
    getWorkCountryCode(): string;
    /** @returns string */
    getWorkNumber(): string;
    /** @returns string */
    getMobileCountryCode(): string;
    /** @returns string */
    getMobileNumber(): string;
    /** @returns Date */
    getPaymentAccountCreateDate(): Date;
    /** @returns AgeIndicator */
    getPaymentAgeIndicator(): AgeIndicator;
    /** @returns boolean */
    getPreviousSuspiciousActivity(): boolean;
    /** @returns number */
    getNumberOfPurchasesInLastSixMonths(): number;
    /** @returns number */
    getNumberOfTransactionsInLast24Hours(): number;
    /** @returns number */
    getNumberOfAddCardAttemptsInLast24Hours(): number;
    /** @returns number */
    getNumberOfTransactionsInLastYear(): number;
    /** @returns BrowserData */
    getBrowserData(): BrowserData;
    /** @returns string */
    getPriorAuthenticationData(): string;
    /** @returns PriorAuthenticationMethod */
    getPriorAuthenticationMethod(): PriorAuthenticationMethod;
    /** @returns string */
    getPriorAuthenticationTransactionId(): string;
    /** @returns Date */
    getPriorAuthenticationTimestamp(): Date;
    /** @returns number */
    getMaxNumberOfInstallments(): number;
    /** @returns Date */
    getRecurringAuthorizationExpiryDate(): Date;
    /** @returns number */
    getRecurringAuthorizationFrequency(): number;
    /** @returns string */
    getCustomerAuthenticationData(): string;
    /** @returns CustomerAuthenticationMethod */
    getCustomerAuthenticationMethod(): CustomerAuthenticationMethod;
    /** @returns Date */
    getCustomerAuthenticationTimestamp(): Date;
    /************************************************SETTERS****************************/
    /**
     * @param {IPaymentMethod} value
     * @returns {this}
     */
    abstract withPaymentMethod(value: PaymentMethod): this;
    /**
     * @param {TransactionType} transactionType
     * @returns {this}
     */
    withTransactionType(transactionType: TransactionType): this;
    /**
     * @param {string | number} value
     * @returns {this}
     */
    withAmount(value: string | number): this;
    /**
     * @param {string} value
     * @returns {this}
     */
    withCurrency(value: string): this;
    /**
     * @param {AuthenticationSource} value
     * @returns {this}
     */
    withAuthenticationSource(value: AuthenticationSource): this;
    /**
     * @param {string} value
     * @returns {this}
     */
    withOrderCreateDate(value: string): this;
    /**
     * @param {string} referenceNumber
     * @returns {this}
     */
    withReferenceNumber(referenceNumber: string): this;
    /**
     * @param {boolean} value
     * @returns {this}
     */
    withAddressMatchIndicator(value: boolean): this;
    /**
     * @param {Address} address
     * @param {string} type
     * @returns {this}
     */
    withAddress(address: Address, type?: AddressType): this;
    /**
     * @param {number} giftCardAmount
     * @returns {this}
     */
    withGiftCardAmount(giftCardAmount: number): this;
    /**
     * @param {number} giftCardCount
     * @returns {this}
     */
    withGiftCardCount(giftCardCount: number): this;
    /**
     * @param {string} giftCardCurrency
     * @returns {this}
     */
    withGiftCardCurrency(giftCardCurrency: string): this;
    /**
     * @param {string} deliveryEmail
     * @returns {this}
     */
    withDeliveryEmail(deliveryEmail: string): this;
    /**
     * @param {DeliveryTimeFrame} deliveryTimeframe
     * @returns {this}
     */
    withDeliveryTimeFrame(deliveryTimeframe: DeliveryTimeFrame): this;
    /**
     * @param {ShippingMethod} shippingMethod
     * @returns {this}
     */
    withShippingMethod(shippingMethod: ShippingMethod): this;
    /**
     * @param {boolean} shippingNameMatchesCardHolderName
     * @returns {this}
     */
    withShippingNameMatchesCardHolderName(shippingNameMatchesCardHolderName: boolean): this;
    /**
     * @param {Date} shippingAddressCreateDate
     * @returns {this}
     */
    withShippingAddressCreateDate(shippingAddressCreateDate: Date): this;
    /**
     * @param {any} shippingAddressUsageIndicator
     * @returns {this}
     */
    withShippingAddressUsageIndicator(shippingAddressUsageIndicator: any): this;
    /**
     * @param {any} preOrderAvailabilityDate
     * @returns {this}
     */
    withPreOrderAvailabilityDate(preOrderAvailabilityDate: any): this;
    /**
     * @param {any} preOrderIndicator
     * @returns {this}
     */
    withPreOrderIndicator(preOrderIndicator: any): this;
    /**
     * @param {ReorderIndicator} reorderIndicator
     * @returns {this}
     */
    withReorderIndicator(reorderIndicator: ReorderIndicator): this;
    /**
     * @param {OrderTransactionType} orderTransactionType
     * @returns {this}
     */
    withOrderTransactionType(orderTransactionType: OrderTransactionType): this;
    /**
     * @param {string} value
     * @returns {this}
     */
    withOrderId(value: string): this;
    /**
     * @param {string} customerAccountId
     * @returns {this}
     */
    withCustomerAccountId(customerAccountId: string): this;
    /**
     * @param {AgeIndicator} ageIndicator
     * @returns {this}
     */
    withAccountAgeIndicator(ageIndicator: AgeIndicator): this;
    /**
     * @param {Date} accountChangeDate
     * @returns {this}
     */
    withAccountChangeDate(accountChangeDate: Date): this;
    /**
     * @param {Date} accountCreateDate
     * @returns {this}
     */
    withAccountCreateDate(accountCreateDate: Date): this;
    /**
     * @param {AgeIndicator} accountChangeIndicator
     * @returns {this}
     */
    withAccountChangeIndicator(accountChangeIndicator: AgeIndicator): this;
    /**
     * @param {Date} passwordChangeDate
     * @returns {this}
     */
    withPasswordChangeDate(passwordChangeDate: Date): this;
    /**
     * @param {AgeIndicator} passwordChangeIndicator
     * @returns {this}
     */
    withPasswordChangeIndicator(passwordChangeIndicator: AgeIndicator): this;
    /**
     * @param {string} phoneCountryCode
     * @param {string} number
     * @param {PhoneNumberType} type
     *
     * @returns {this}
     */
    withPhoneNumber(phoneCountryCode: string, number: string, type: PhoneNumberType): this;
    /**
     * @deprecated  Will be replaced with method withPhoneNumber($phoneCountryCode, $number, $type)
     * @param {string} countryCode
     * @param {string} number
     *
     * @returns {this}
     */
    withHomeNumber(countryCode: string, number: string): this;
    /**
     * @deprecated  Will be replaced with method withPhoneNumber($phoneCountryCode, $number, $type)
     *
     * @param {string} countryCode
     * @param {string} number
     * @returns {this}
     */
    withWorkNumber(countryCode: string, number: string): this;
    /**
     * @deprecated  Will be replaced with method withPhoneNumber($phoneCountryCode, $number, $type)
     *
     * @param {string} countryCode
     * @param {string} number
     * @returns {this}
     */
    withMobileNumber(countryCode: string, number: string): this;
    /**
     * @param {Date} paymentAccountCreateDate
     * @returns {this}
     */
    withPaymentAccountCreateDate(paymentAccountCreateDate: Date): this;
    /**
     * @param {AgeIndicator} paymentAgeIndicator
     * @returns {this}
     */
    withPaymentAccountAgeIndicator(paymentAgeIndicator: AgeIndicator): this;
    /**
     * @param {any} previousSuspiciousActivity
     * @returns {this}
     */
    withPreviousSuspiciousActivity(previousSuspiciousActivity: any): this;
    /**
     * @param {string} numberOfPurchasesInLastSixMonths
     * @returns {this}
     */
    withNumberOfPurchasesInLastSixMonths(numberOfPurchasesInLastSixMonths: number): this;
    /**
     * @param {number} numberOfTransactionsInLast24Hours
     * @returns {this}
     */
    withNumberOfTransactionsInLast24Hours(numberOfTransactionsInLast24Hours: number): this;
    /**
     * @param {number} numberOfAddCardAttemptsInLast24Hours
     * @returns {this}
     */
    withNumberOfAddCardAttemptsInLast24Hours(numberOfAddCardAttemptsInLast24Hours: number): this;
    /**
     * @param {number} numberOfTransactionsInLastYear
     * @returns {this}
     */
    withNumberOfTransactionsInLastYear(numberOfTransactionsInLastYear: number): this;
    /**
     * @param {BrowserData} value
     * @returns {this}
     */
    withBrowserData(value: BrowserData): this;
    /**
     * @param {string} priorAuthenticationData
     * @returns {this}
     */
    withPriorAuthenticationData(priorAuthenticationData: string): this;
    /**
     * @param {PriorAuthenticationMethod} priorAuthenticationMethod
     * @returns {this}
     */
    withPriorAuthenticationMethod(priorAuthenticationMethod: PriorAuthenticationMethod): this;
    /**
     * @param {string} priorAuthenticationTransactionId
     * @returns {this}
     */
    withPriorAuthenticationTransactionId(priorAuthenticationTransactionId: string): this;
    /**
     * @param {Date} priorAuthenticationTimestamp
     * @returns {this}
     */
    withPriorAuthenticationTimestamp(priorAuthenticationTimestamp: Date): this;
    /**
     * @param {number} maxNumberOfInstallments
     * @returns {this}
     */
    withMaxNumberOfInstallments(maxNumberOfInstallments: number): this;
    /**
     * @param {Date} recurringAuthorizationExpiryDate
     * @returns {this}
     */
    withRecurringAuthorizationExpiryDate(recurringAuthorizationExpiryDate: Date): this;
    /**
     * @param {number} recurringAuthorizationFrequency
     * @returns {this}
     */
    withRecurringAuthorizationFrequency(recurringAuthorizationFrequency: number): this;
    /**
     * @param {string} customerAuthenticationData
     * @returns {this}
     */
    withCustomerAuthenticationData(customerAuthenticationData: string): this;
    /**
     * @param {CustomerAuthenticationMethod} customerAuthenticationMethod
     * @returns {this}
     */
    withCustomerAuthenticationMethod(customerAuthenticationMethod: CustomerAuthenticationMethod): this;
    /**
     * @param {Date} customerAuthenticationTimestamp
     * @returns {this}
     */
    withCustomerAuthenticationTimestamp(customerAuthenticationTimestamp: Date): this;
    /**
     * @param {string} value
     * @returns {SecureBuilder}
     */
    withIdempotencyKey(value: string): this;
}
