import { Secure3dVersion } from "./Entities";
import { IPaymentGateway, IRecurringService } from "./Gateways";
import { IPayFacProvider } from "./Gateways/IPayFacProvider";
import { ReportingService, Secure3dService } from "./Services";
import { IDeviceInterface } from "./Terminals";
import { DeviceController } from "./Terminals/DeviceController";
export declare class ConfiguredServices {
    private payFacProvider;
    gatewayConnector: IPaymentGateway;
    recurringConnector: IRecurringService;
    reportingService: ReportingService;
    deviceInterface: IDeviceInterface;
    private _deviceController;
    private secure3dProviders;
    constructor();
    /**
     * @return void
     */
    setPayFacProvider(provider: IPayFacProvider): void;
    /**
     * @return IPayFacProvider
     */
    getPayFacProvider(): IPayFacProvider;
    get deviceController(): DeviceController;
    set deviceController(deviceController: DeviceController);
    getSecure3dProvider(version: Secure3dVersion): Secure3dService | null | undefined;
    setSecure3dProvider(version: Secure3dVersion, provider: Secure3dService): void;
}
