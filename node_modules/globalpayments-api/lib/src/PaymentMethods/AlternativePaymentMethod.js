"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlternativePaymentMethod = void 0;
const src_1 = require("../../src");
/* eslint-disable indent */
class AlternativePaymentMethod {
    paymentMethodType = src_1.PaymentMethodType.APM;
    alternativePaymentMethodType;
    returnUrl;
    statusUpdateUrl;
    cancelUrl;
    descriptor;
    country;
    accountHolderName;
    providerReference;
    addressOverrideMode;
    pinBlock;
    encryptionData;
    /* eslint-enable indent */
    constructor(alternativePaymentMethodType) {
        this.alternativePaymentMethodType = alternativePaymentMethodType;
    }
    charge(amount) {
        return new src_1.AuthorizationBuilder(src_1.TransactionType.Sale, this)
            .withModifier(src_1.TransactionModifier.AlternativePaymentMethod)
            .withAmount(amount);
    }
    authorize(amount) {
        return new src_1.AuthorizationBuilder(src_1.TransactionType.Auth, this)
            .withModifier(src_1.TransactionModifier.AlternativePaymentMethod)
            .withAmount(amount);
    }
    addValue(amount) {
        amount;
        throw new src_1.NotImplementedError();
    }
    refund(amount) {
        amount;
        throw new src_1.NotImplementedError();
    }
    reverse(amount) {
        amount;
        throw new src_1.NotImplementedError();
    }
}
exports.AlternativePaymentMethod = AlternativePaymentMethod;
//# sourceMappingURL=AlternativePaymentMethod.js.map