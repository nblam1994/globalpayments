import { AuthorizationBuilder, EncryptionData, PaymentMethodType } from "../../src";
import { IChargable, IEncryptable, IPaymentMethod, IPinProtected, IPrePayable, IRefundable, IReversable } from ".";
export declare class AlternativePaymentMethod implements IPaymentMethod, IPrePayable, IRefundable, IReversable, IChargable, IEncryptable, IPinProtected {
    paymentMethodType: PaymentMethodType;
    alternativePaymentMethodType: string;
    returnUrl: string;
    statusUpdateUrl: string;
    cancelUrl: string;
    descriptor: string;
    country: string;
    accountHolderName: string;
    providerReference: string;
    addressOverrideMode: string;
    pinBlock: string;
    encryptionData: EncryptionData;
    constructor(alternativePaymentMethodType: string);
    charge(amount: string | number): AuthorizationBuilder;
    authorize(amount: string | number): AuthorizationBuilder;
    addValue(amount: string | number): AuthorizationBuilder;
    refund(amount: string | number): AuthorizationBuilder;
    reverse(amount: string | number): AuthorizationBuilder;
}
