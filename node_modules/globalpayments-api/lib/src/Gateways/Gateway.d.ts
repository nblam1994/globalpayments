import { IDictionary } from "../Builders";
import { GatewayResponse } from "./GatewayResponse";
import { Environment, IRequestLogger } from "../../src";
export declare abstract class Gateway {
    headers: IDictionary<string>;
    timeout: number;
    serviceUrl: string;
    protected contentType: string;
    maskedRequestData: Record<string, string>;
    requestLogger: IRequestLogger;
    environment: Environment;
    constructor(contentType: string);
    sendRequest(httpMethod: string, endpoint: string, requestId: number, data?: string, queryStringParams?: IDictionary<string>): Promise<GatewayResponse>;
    maskSensitiveData(data: string): void;
    protected buildQueryString(queryStringParams?: IDictionary<string>): string;
}
