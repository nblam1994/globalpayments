"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.XmlGateway = void 0;
const RequestIdProvider_1 = require("../../test/Integration/Gateways/Terminals/RequestIdProvider");
const Gateway_1 = require("./Gateway");
const elementtree_1 = require("@azz/elementtree");
class XmlGateway extends Gateway_1.Gateway {
    constructor() {
        super("text/xml");
    }
    doTransaction(requestData) {
        const requestId = new RequestIdProvider_1.RequestIdProvider().getRequestId();
        return this.sendRequest("POST", "", requestId, requestData).then((response) => {
            if (this.requestLogger) {
                this.requestLogger.responseReceived(response, requestId);
            }
            return response.rawResponse;
        });
    }
    maskSensitiveData(data) {
        const root = (0, elementtree_1.XML)(data);
        Object.keys(this.maskedRequestData).forEach((key) => {
            const splittedKeys = key.split(".");
            if (splittedKeys.length) {
                const element = root.find(splittedKeys[0]);
                if (element) {
                    if (splittedKeys[1]) {
                        const subElement = element.find(splittedKeys[1]);
                        if (splittedKeys[2]) {
                            subElement.find(splittedKeys[2]).text =
                                this.maskedRequestData[key];
                        }
                        else {
                            subElement.text = this.maskedRequestData[key];
                        }
                    }
                    else {
                        element.text = this.maskedRequestData[key];
                    }
                }
            }
            else {
                root.find(key) && (root.find(key).text = this.maskedRequestData[key]);
            }
        });
        return new elementtree_1.ElementTree(root)
            .write({
            indent: "    ",
        })
            .replaceAll("    1", "    ");
    }
}
exports.XmlGateway = XmlGateway;
//# sourceMappingURL=XmlGateway.js.map