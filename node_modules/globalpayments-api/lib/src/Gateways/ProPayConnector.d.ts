import { PayFacBuilder } from "../../src/Builders/PayFacBuilder";
import { IPayFacProvider } from "./IPayFacProvider";
import { XmlGateway } from "./XmlGateway";
import { Transaction } from "../Entities";
import { GatewayConfig } from "src/ServiceConfigs";
export declare class ProPayConnector extends XmlGateway implements IPayFacProvider {
    config: GatewayConfig;
    certStr: string;
    termID: string;
    x509CertificatePath: string;
    x509CertStr: string;
    selfSignedCert: string;
    processPayFac(builder: PayFacBuilder): Promise<Transaction>;
    private HydrateAccountDetails;
    private hydrateCommonFields;
    private HydrateBankAccountOwnershipData;
    private HydrateMailAddress;
    private HydrateBankDetails;
    private HydrateBusinessData;
    private HydrateUserPersonalData;
    private HydrateThreatRiskData;
    private HydrateSignificantOwnerData;
    private HydrateAccountPermissions;
    private HydrateDeviceData;
    private HydrateBeneficialOwnerData;
    private HydrateGrossBillingData;
    private HydrateAccountRenewDetails;
    private HydrateFlashFundsPaymentCardData;
    private HydrateDocumentUploadData;
    private HydrateSSORequestData;
    private HydrateOrderDeviceData;
    private HydrateOrderDeviceDetails;
    private UpdateGatewaySettings;
    private createNewElements;
    private setX509Certificate;
    mapRequestType(builder: PayFacBuilder): string;
    mapResponse(builder: PayFacBuilder, rawResponse: string): Transaction;
    private populateProPayResponse;
    private populateResponseWithEnhancedAccountDetails;
    private getAccountNumberFromResponse;
    private getBeneficialOwnerDataResultsFromResponse;
    private getPhysicalAddressFromResponse;
    private getACHOutBalanceInfoFromResponse;
    private getFlashFundsBalanceInfoFromResponse;
}
