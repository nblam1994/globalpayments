import { Configuration, IDeviceInterface, IPaymentGateway, IRecurringService, Secure3dVersion } from "./";
import { IPayFacProvider } from "./Gateways/IPayFacProvider";
import { ServicesConfigs } from "./ServiceConfigs/ServicesConfigs";
import { DeviceController } from "./Terminals/DeviceController";
export declare class ServicesContainer {
    private static _instance;
    private _configs;
    static instance(): ServicesContainer;
    getClient(configName?: string): IPaymentGateway;
    getRecurringClient(configName?: string): IRecurringService;
    getXmlClient(configName?: string): IPayFacProvider;
    getDeviceInterface(configName?: string): IDeviceInterface;
    getDeviceController(configName?: string): DeviceController;
    getSecure3d(configName: string, version: Secure3dVersion): any;
    static configure(config: ServicesConfigs, configName?: string): void;
    static configureService<T extends Configuration>(config: T, configName?: string): void;
    private getConfiguration;
    private addConfiguration;
    static removeConfiguration(configName?: string): void;
}
